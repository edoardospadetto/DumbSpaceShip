SHADER VERTEX simple0

#version 330 core
layout (location = 0) in vec2 aPos;
uniform vec2 status;

void main()
{	
    gl_Position = vec4(aPos.x+status[0], aPos.y+status[1], 0.0, 1.0);
}

ENDSHADER

SHADER FRAGMENT simple1

#version 330 core

out vec4 FragColor;

void main()
{
    FragColor = vec4(1.0f, 0.3f, 1.0f, 0.5f);
} 

ENDSHADER

SHADER FRAGMENT simple2

#version 330 core

out vec4 FragColor;

void main()
{
    FragColor = vec4(0.3f, 1.0f, 1.0f, 0.5f);
} 

ENDSHADER

SHADER VERTEX simpletexture0

#version 330 core
layout (location = 0) in vec2 aPos;
layout (location = 1) in vec2 aTex;

out vec2 TexCoord;

uniform vec2 status;

void main()
{	
    gl_Position = vec4(aPos.x+status[0], aPos.y+status[1], 0.0, 1.0);
	TexCoord = aTex;
}

ENDSHADER

SHADER FRAGMENT simpletexture1

#version 330 core

out vec4 FragColor;
in vec2 TexCoord;

uniform sampler2D ourTexture;

void main()
{	/*
	vec4 FgClr;
	FragColor = texture(ourTexture, TexCoord);
	float param = 0.02, lim = 0.8;
	int cnter =0;
	if(FragColor[3]<0.2)
	{
		int sens = 10 ;
		int rangex1 = sens*int(floor(TexCoord.x/param)), rangex2=sens*int(floor(TexCoord.x/param))+sens, rangey1 =sens*int(floor(TexCoord.y/param)), rangey2=sens*int(floor(TexCoord.y/param))+sens;
		float alpha = 1;
		for(int i=rangex1; i<rangex2; ++i)
		{
			for(int j=rangey1; j<rangey2; ++j)
			{
				FgClr = texture(ourTexture, vec2(i*param/sens, j*param/sens)); 
				if(alpha > FgClr[3]) FragColor=FgClr; ++cnter;
				
			}
		}
		//FragColor/=cnter;
		FragColor[3]=0.0;
		cnter=0;
	}
	else
	{
		FragColor = texture(ourTexture, floor(TexCoord/param)*param);	
	}*/
	
	float param = 0.1;	
	FragColor = texture(ourTexture, TexCoord);
	if(FragColor[3]>0.6) // if colored 
	{ 
    		FragColor = texture(ourTexture, floor(TexCoord/param)*param); 
 	}
 	else
 	{
 		FragColor = vec4(0.0,0.0,0.0,1.0);
 		FragColor[3]=0;
 	}
} 

ENDSHADER
